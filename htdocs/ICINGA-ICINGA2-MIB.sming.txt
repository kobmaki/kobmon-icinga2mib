//
// This module has been generated by smidump 0.4.8. Do not edit.
//
module ICINGA-ICINGA2-MIB {

  import SNMPv2-SMI      (MODULE-IDENTITY, OBJECT-IDENTITY, 
                          OBJECT-TYPE);
  import ICINGA-ROOT-MIB (icinga);
  import ICINGA-TC-MIB   (I2Address6TC, I2AddressTC, I2AttemptTC, 
                          I2BooleanTC, I2CheckCommandTC, 
                          I2CheckIntervalTC, I2DisplayNameTC, 
                          I2HostNameTC, I2NameTC, I2StringTC, 
                          I2TimeStampTC);
  import SNMPv2-SMI      (NOTIFICATION-TYPE);
  import SNMPv2-CONF     (NOTIFICATION-GROUP, MODULE-COMPLIANCE, 
                          OBJECT-GROUP);

//
// MODULE META INFORMATION
//

  organization      
     "Uwe Ebel, koboldmaki";

  contact           
     "Uwe Ebel";

  description       
     "ICINGA2 MIB, see also at REVISION=LAST-UPDATED";

  revision {
    date            "2016-10-20 23:59";
    description     
       "WIP, add base attributs.";
  };
  revision {
    date            "2015-12-25 00:01";
    description     
       "initial version";
  };

  identity          icinga2;

//
// OBJECT DEFINITIONS
//


  node icinga2 {
    oid             icinga.2;
  };

  node icinga2Notifications {
    oid             icinga2.0;
    description     
       "Parent of all notifications like traps, informations etc.";
  };

  node i2ObjectAttributes {
    oid             icinga2.1;
    description     
       "All object attributs.";
  };

  node i2GenericAttribute {
    oid             i2ObjectAttributes.0;
    description     
       "Global object attributs.";
  };

  scalar i2ObjectType {
    oid             i2GenericAttribute.1;
    type            Enumeration (object(0), host(1), service(2), 
                      hostgroup(3), servicegroup(4), 
                      hostescalation(5), serviceescalation(6), 
                      hostdependency(7), servicedependency(8), 
                      timeperiod(9), contact(10), 
                      contactgroup(11), command(12), 
                      endpoint(13), zone(14));
    access          readwrite;
    description     
       "Objecttype, id mapping type";
  };

  scalar i2Name {
    oid             i2GenericAttribute.3;
    type            I2NameTC;
    access          readwrite;
    description     
       "Name of a service,host, etc.";
  };

  scalar i2StateType {
    oid             i2GenericAttribute.4;
    type            Enumeration (stateTypeSoft(0), 
                      stateTypeHard(1));
    access          readwrite;
    description     
       "State type, could be soft or hard.";
  };

  scalar i2DisplayName {
    oid             i2GenericAttribute.5;
    type            I2DisplayNameTC;
    access          readwrite;
    description     
       "Display name";
  };

  scalar i2Notes {
    oid             i2GenericAttribute.6;
    type            I2StringTC;
    access          readonly;
    description     
       "Notes in an Object";
  };

  scalar i2NotesUrl {
    oid             i2GenericAttribute.7;
    type            I2StringTC;
    access          readonly;
    description     
       "URL to a notes";
  };

  scalar i2Output {
    oid             i2GenericAttribute.8;
    type            I2StringTC;
    access          readonly;
    description     
       "An output from a check";
  };

  scalar i2CheckCommand {
    oid             i2GenericAttribute.9;
    type            I2CheckCommandTC;
    access          readonly;
    description     
       "Check command name";
  };

  scalar i2CheckAttempt {
    oid             i2GenericAttribute.10;
    type            I2AttemptTC;
    access          readonly;
    description     
       "Check heck timestamp";
  };

  scalar i2EnableActiveChecks {
    oid             i2GenericAttribute.11;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Enable active checks?";
  };

  scalar i2EnableEventHandler {
    oid             i2GenericAttribute.12;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is event handler enabled?";
  };

  scalar i2EnableFlapping {
    oid             i2GenericAttribute.13;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is flapping detection enabled?";
  };

  scalar i2EnableNotfications {
    oid             i2GenericAttribute.14;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is notification enabled?";
  };

  scalar i2EnablePassiveCheck {
    oid             i2GenericAttribute.15;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Are passive checks allowed?";
  };

  scalar i2EnablePerfdata {
    oid             i2GenericAttribute.16;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is writing of perfdata active?";
  };

  scalar i2Active {
    oid             i2GenericAttribute.17;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is active? Used e.g. zone, endpoint";
  };

  scalar i2Global {
    oid             i2GenericAttribute.18;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Is global? Used e.g. zone, endpoint";
  };

  scalar i2Address {
    oid             i2GenericAttribute.19;
    type            I2AddressTC;
    access          readonly;
    description     
       "Address in that resolves to an IPv4";
  };

  scalar i2Address6 {
    oid             i2GenericAttribute.20;
    type            I2Address6TC;
    access          readonly;
    description     
       "Address in that resolves to an IPv6";
  };

  scalar i2Parent {
    oid             i2GenericAttribute.21;
    type            I2StringTC;
    access          readonly;
    description     
       "Name of the parent";
  };

  scalar i2HaMode {
    oid             i2GenericAttribute.22;
    type            I2BooleanTC;
    access          readonly;
    description     
       "Ha Mode";
  };

  scalar i2LastCheck {
    oid             i2GenericAttribute.99;
    type            I2TimeStampTC;
    access          readonly;
    description     
       "Last check timestamp";
  };

  scalar i2CheckInterval {
    oid             i2GenericAttribute.100;
    type            I2CheckIntervalTC;
    access          readonly;
    description     
       "Check interval";
  };

  scalar i2CheckPeriod {
    oid             i2GenericAttribute.101;
    type            I2StringTC;
    access          readonly;
    description     
       "Name of the period.";
  };

  node i2HostAttributes {
    oid             i2ObjectAttributes.1;
    description     
       "Host attributs";
  };

  scalar i2HostName {
    oid             i2HostAttributes.1;
    type            I2HostNameTC;
    access          readwrite;
    description     
       "Hostname";
  };

  scalar i2StateHost {
    oid             i2HostAttributes.4;
    type            Enumeration (hostUp(0), hostDown(1));
    access          readonly;
    description     
       "Host state";
  };

  node i2ServiceAttributes {
    oid             i2ObjectAttributes.2;
    description     
       "Service attributs";
  };

  scalar i2ServiceName {
    oid             i2ServiceAttributes.1;
    type            I2StringTC;
    access          readwrite;
    description     
       "Name of the service";
  };

  scalar i2StateService {
    oid             i2ServiceAttributes.2;
    type            Enumeration (serviceOK(0), serviceWarning(1), 
                      serviceCritical(2), serviceUnknown(3));
    access          readwrite;
    description     
       "Service state";
  };

  scalar i2NotificationType {
    oid             i2ObjectAttributes.6;
    type            Enumeration (undefined(0), downtimeStart(1), 
                      downtimeEnd(2), downtimeRemoved(3), 
                      custom(4), acknowledgement(5), problem(6), 
                      recovery(7), flappingStart(8), 
                      flappingEnd(9));
    access          readwrite;
    description     
       "Notfication type";
  };

  node i2UserAttributes {
    oid             i2ObjectAttributes.10;
    description     
       "Contact";
  };

  scalar i2UserPager {
    oid             i2UserAttributes.1;
    type            I2StringTC;
    access          readwrite;
    description     
       "Pager";
  };

  node i2EndpointAttributes {
    oid             i2ObjectAttributes.13;
    description     
       "Endpoint attributes";
  };

  scalar i2EndpointName {
    oid             i2EndpointAttributes.1;
    type            I2StringTC;
    access          readwrite;
    description     
       "Endpoint name";
  };

  node i2ZoneAttributes {
    oid             i2ObjectAttributes.14;
    description     
       "Zone attributes";
  };

  scalar i2ZoneName {
    oid             i2ZoneAttributes.1;
    type            I2StringTC;
    access          readwrite;
    description     
       "Zone name";
  };

  node icinga2Groups {
    oid             icinga2.5;
    description     
       "Groups";
  };

  node icinga2Conformance {
    oid             icinga2.6;
    description     
       "Conformance";
  };

  node icinga2Compliance {
    oid             icinga2.7;
    description     
       "Compliance";
  };

  node icinga2Status {
    oid             icinga2.8;
    description     
       "Status entry point";
  };

  scalar i2DaemonStatus {
    oid             icinga2Status.1;
    type            Enumeration (up(0), down(1));
    access          readonly;
    description     
       "Status of the icinga2 daemon. Indicates if the daemon is up or down.";
  };

  scalar i2ClusterStatus {
    oid             icinga2Status.2;
    type            Enumeration (up(0), down(1), nocluster(2));
    access          readonly;
    description     
       "Status of the cluster";
  };

//
// NOTIFICATION DEFINITIONS
//

  notification i2NotificationHost {
    oid             icinga2Notifications.1;
    objects         (i2NotificationType, i2ObjectType, 
                     i2StateHost, i2HostName, i2DisplayName);
    description     
       "Host trap";
    reference       
       "TODO";
  };

  notification i2NotificationService {
    oid             icinga2Notifications.2;
    objects         (i2NotificationType, i2ObjectType, 
                     i2StateService, i2ServiceName, 
                     i2DisplayName, i2HostName);
    description     
       "Service trap";
    reference       
       "TODO";
  };

  notification i2NotificationEndpoint {
    oid             icinga2Notifications.13;
    objects         (i2NotificationType, i2ObjectType, 
                     i2EndpointName);
    description     
       "Endpoint Trap";
    reference       
       "TODO";
  };

  notification i2NotificationGeneric {
    oid             icinga2Notifications.9999;
    objects         (i2NotificationType, i2ObjectType, i2Name);
    description     
       "Generic Icinga2 Notfication";
    reference       
       "TODO";
  };

//
// GROUP DEFINITIONS
//

  group i2ComplianceTypeGroup {
    oid             icinga2Compliance.2;
    members         (i2ObjectType, i2StateType, 
                     i2NotificationType);
    description     
       "Group of object for compliance";
  };

  group i2ComplianceAttributeGroup {
    oid             icinga2Compliance.3;
    members         (i2Name, i2DisplayName, i2Address, 
                     i2Address6, i2HostName, i2UserPager, 
                     i2ServiceName, i2LastCheck, i2CheckAttempt, 
                     i2CheckInterval, i2CheckPeriod, 
                     i2CheckCommand, i2Output, i2Notes, 
                     i2NotesUrl, i2EnableActiveChecks, 
                     i2EnableEventHandler, i2EnableFlapping, 
                     i2EnableNotfications, i2EnablePassiveCheck, 
                     i2EnablePerfdata, i2Active, i2Global, 
                     i2Parent, i2EndpointName, i2ZoneName, 
                     i2HaMode);
    description     
       "Variable of objects";
  };

  group i2ComplianceStateGroup {
    oid             icinga2Compliance.4;
    members         (i2StateService, i2StateHost);
    description     
       "Group with state objects for compliance";
  };

  group i2ComplinanceObjectGroup {
    oid             icinga2Compliance.5;
    members         (i2StateHost);
    description     
       "Objects like, Host, Service";
  };

  group i2ComplianceNotificationGroup {
    oid             icinga2Compliance.6;
    members         (i2NotificationGeneric, i2NotificationHost, 
                     i2NotificationService, 
                     i2NotificationEndpoint);
    description     
       "All traps group for compliance.";
  };

  group i2ComplianceOidEntryGroup {
    oid             icinga2Compliance.8;
    members         (i2DaemonStatus, i2ClusterStatus);
    description     
       "Entry Objects";
  };

//
// COMPLIANCE DEFINITIONS
//

  compliance i2Compliance {
    oid             icinga2Compliance.1;
    description     
       "Module desciption";

    optional i2ComplianceTypeGroup {
      description   
         "Types";
    };
    optional i2ComplianceStateGroup {
      description   
         "States";
    };
    optional i2ComplianceAttributeGroup {
      description   
         "Attribute";
    };
    optional i2ComplianceOidEntryGroup {
      description   
         "OID entry";
    };
    optional i2ComplinanceObjectGroup {
      description   
         "Objects";
    };
    optional i2ComplianceNotificationGroup {
      description   
         "Traps";
    };
  };

}; // end of module ICINGA-ICINGA2-MIB.
