/*							-- DO NOT EDIT --
 * Generated by smidump version 0.4.8:
 *   smidump -f corba KOBOLDMAKI-ICINGA2-MIB
 *
 * Derived from KOBOLDMAKI-ICINGA2-MIB:
 *   ICINGA2 MIB, see also at REVISION=LAST-UPDATED
 *
 * Revision 2015-12-25 00:01:
 *   initial version
 *
 * $Id$
 */

#ifndef _KOBOLDMAKI_ICINGA2_MIB_IDL_
#define _KOBOLDMAKI_ICINGA2_MIB_IDL_

#include <ASN1Types.idl>
#include <SNMPMgmt.idl>

module KOBOLDMAKI_ICINGA2_MIB {

    const string moduleIdentity = "icinga2";
    const ASN1_ObjectIdentifier icinga2 = "::KOBOLDMAKI_ICINGA2_MIB::icinga2";

    /*
             ICINGA2 MIB, see also at REVISION=LAST-UPDATED

    LAST-UPDATED:   201512250001Z

    ORGANIZATION:
            "Uwe Ebel, koboldmaki"

    CONTACT-INFO:
            "Uwe Ebel"

    REVISION:       "201512250001Z"
    REVISION-DESCRIPTION:
            "initial version"

    */

    typedef ASN1_Integer I2ObjectTypeType; 
    const I2ObjectTypeType I2ObjectTypeType_host = 1;
    const I2ObjectTypeType I2ObjectTypeType_service = 2;
    const I2ObjectTypeType I2ObjectTypeType_hostgroup = 3;
    const I2ObjectTypeType I2ObjectTypeType_servicegroup = 4;
    const I2ObjectTypeType I2ObjectTypeType_hostescalation = 5;
    const I2ObjectTypeType I2ObjectTypeType_serviceescalation = 6;
    const I2ObjectTypeType I2ObjectTypeType_hostdependency = 7;
    const I2ObjectTypeType I2ObjectTypeType_servicedependency = 8;
    const I2ObjectTypeType I2ObjectTypeType_timeperiod = 9;
    const I2ObjectTypeType I2ObjectTypeType_contact = 10;
    const I2ObjectTypeType I2ObjectTypeType_contactgroup = 11;
    const I2ObjectTypeType I2ObjectTypeType_command = 12;
    const I2ObjectTypeType I2ObjectTypeType_endpoint = 13;
    const I2ObjectTypeType I2ObjectTypeType_zone = 14;
    const string I2ObjectTypeType_NameNumberList = "host (1) , service (2) , hostgroup (3) , servicegroup (4) , hostescalation (5) , serviceescalation (6) , hostdependency (7) , servicedependency (8) , timeperiod (9) , contact (10) , contactgroup (11) , command (12) , endpoint (13) , zone (14)";

    typedef ASN1_Integer I2StateTypeType; 
    const I2StateTypeType I2StateTypeType_stateTypeSoft = 0;
    const I2StateTypeType I2StateTypeType_stateTypeHard = 1;
    const string I2StateTypeType_NameNumberList = "stateTypeSoft (0) , stateTypeHard (1)";

    typedef ASN1_Integer I2HostStateType; 
    const I2HostStateType I2HostStateType_hostUp = 0;
    const I2HostStateType I2HostStateType_hostDown = 1;
    const string I2HostStateType_NameNumberList = "hostUp (0) , hostDown (1)";

    typedef ASN1_Integer I2ServiceStateType; 
    const I2ServiceStateType I2ServiceStateType_serviceOK = 0;
    const I2ServiceStateType I2ServiceStateType_serviceWarning = 1;
    const I2ServiceStateType I2ServiceStateType_serviceCritical = 2;
    const I2ServiceStateType I2ServiceStateType_serviceUnknown = 3;
    const string I2ServiceStateType_NameNumberList = "serviceOK (0) , serviceWarning (1) , serviceCritical (2) , serviceUnknown (3)";

    interface icinga2Type : SNMPMgmt::SmiEntry {
    };

    struct I2HostStateVBType {
        string var_name;
        string var_index;
        I2HostStateType i2HostState;
    };

    struct I2ServiceStateVBType {
        string var_name;
        string var_index;
        I2ServiceStateType i2ServiceState;
    };

    struct I2HostTrapType {
        I2HostStateVBType i2HostState;
    };

    struct I2ServiceTrapType {
        I2ServiceStateVBType i2ServiceState;
    };

    /* typed push event communication */
    interface Notifications : SNMPMgmt::Notifications {

        /*
             Host trap
        */
        void i2HostTrap (
            in CosNaming::Name src_entry_name,
            in CORBA::ScopedName event_type,
            in ASN1_GeneralizedTime event_time,
            in I2HostTrapType notification_info
        );

        /*
             Service trap
        */
        void i2ServiceTrap (
            in CosNaming::Name src_entry_name,
            in CORBA::ScopedName event_type,
            in ASN1_GeneralizedTime event_time,
            in I2ServiceTrapType notification_info
        );
    };

    /* typed pull event communication */
    interface PullNotifications : SNMPMgmt::PullNotifications {

        /*
             Host trap
        */
        void pull_i2HostTrap (
            out CosNaming::Name src_entry_name,
            out CORBA::ScopedName event_type,
            out ASN1_GeneralizedTime event_time,
            out I2HostTrapType notification_info
        );
        boolean try_i2HostTrap (
            out CosNaming::Name src_entry_name,
            out CORBA::ScopedName event_type,
            out ASN1_GeneralizedTime event_time,
            out I2HostTrapType notification_info
        );

        /*
             Service trap
        */
        void pull_i2ServiceTrap (
            out CosNaming::Name src_entry_name,
            out CORBA::ScopedName event_type,
            out ASN1_GeneralizedTime event_time,
            out I2ServiceTrapType notification_info
        );
        boolean try_i2ServiceTrap (
            out CosNaming::Name src_entry_name,
            out CORBA::ScopedName event_type,
            out ASN1_GeneralizedTime event_time,
            out I2ServiceTrapType notification_info
        );
    };

};

#endif /* !_KOBOLDMAKI_ICINGA2_MIB_IDL_ */
